<!DOCTYPE html>
<html lang="en">
<head> 
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transaction History</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" integrity="sha384-4LISF5TTJX/fLmGSxO53rV4miRxdg84mZsxmO8Rx5jGtp/LbrixFETvWa5a6sESd" crossorigin="anonymous">
    <style>
        body {
             font-family:  sans-serif;
             background-color: #eef7ff;
            
         }
         .sidebar {
             background-color: #4D869C;
             color: #eef7ff;
             height: 100vh;
             position: fixed;
             width: 280px;
             overflow-y: auto;
             border: 3px solid  #4D869C;
             padding: 15px 10px;
         }
         .sidebar .nav-link {
             margin-bottom: 15px;
             padding: 12px 12px;
             text-align: center;
         }
 
         .search-bar {
             max-width: 300px;
             margin-bottom: 20px;
         }
 
         .in-active{
             border: 3px solid  #eef7ff;
             color: #eef7ff !important;
             border-radius: 12px;
         }
 
         .sidebar .nav-link.active {
             background-color: #eef7ff;
             color: #4D869C;
             border-radius: 12px;
         }
        
       
         .table-responsive {
             overflow-x: auto;
         }
         .search-bar {
             max-width: 300px;
             margin-bottom: 20px;
         }
         .user-list-header {
             background-color: #4D869C;
             color: #eef7ff;
             padding: 10px;
             border-radius: 5px 5px 0 0;
         }
         .search-input {
             padding: 5px 10px;
             border: none;
             border-radius: 5px;
             margin-left: 10px;
         }
 
 
         input[type="search"]{
            color: #4D869C;
            padding: 12px 12px;
            margin-top: 5px;
            border: 1px solid #4D869C;
            outline: #4D869C;
         }
 
     </style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/validator/13.6.0/validator.min.js"></script>
</head>
<body>
    

  <body>
      <div class="container " style="height: 100vh !important;">
          <div class="row ">
           
              <main  class="w-100  px-md-4 main-content   p-5"">
                  <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom"
                  style="border-bottom-color: #4D869C !important;"
                  >
                      <h1 class="h2" style="color: #4D869C;"><a href="/admin" style="text-decoration: none; color: #4D869C;" title="to go Dashboard">Dashboard</a> / Category Offers</h1>
                  </div>
                  <div class="bg-white p-4 rounded shadow-sm">
                      <div class="user-list-header d-flex" style="height: 100px;">
                          <h2>Category Offers</h2>
                          <div class="search-bar ms-auto pe-3">
                              <input type="search" class="search-input" id="orderSearch" placeholder="Search for offers.." onkeyup="searchTable()">
                          </div>
                         
                          <button 
                          type="button"
                          data-bs-toggle="modal"
                          data-bs-target="#addOfferModal"
                          style="background-color: #4D869C;
                          color: #eef7ff;
                          border: 1px solid #eef7ff;
                          padding: 0px 10px;
                          border-radius: 5px;
                          height: 50px;
                          margin-top: 5px;"
                          >
                              Add Category Offer
                          </button>
                          
                      </div>
                      <div class="table-responsive">
                          <table class="table table-hover" id="orderTable" style="color: #4D869C;">
                              <thead>
                                <tr>
                                  <th>No.</th>
                                  <th>Offer Name</th>
                                  <th>Category Name</th>
                                  <th>Offer Percentage</th>
                                  <th>Start Date</th>
                                  <th>End Date</th>
                                  <th>Options</th>
                              </tr>
                              </thead>
                              <tbody>
                                <% categoryOffers.forEach((offer, index) => { %>
                                    <tr>
                                        <td><%= (currentPage - 1) * itemsPerPage + index + 1 %></td>
                                        <td><%= offer.offerName %></td>
                                        <td><%= offer.categoryId.name %> - <%= offer.categoryId.gender %> -</td>
                                        <td><%= offer.discountPercentage %>%</td>
                                        <td><%= new Date(offer.startDate).toLocaleDateString() %></td>
                                        <td><%= offer.endDate ? new Date(offer.endDate).toLocaleDateString() : 'N/A' %></td>
                                        <td>
                                            <button onclick="removeOffer('<%= offer._id %>', '<%= offer.categoryId._id %>')" 
                                                    style="background-color: #4D869C; color: #eef7ff; border: none; padding: 5px 10px; border-radius: 5px;">
                                                Remove
                                            </button>
                                        </td>
                                    </tr>
                                <% }); %>
                            </tbody>
                          </table>
                      </div>
                    
                  </div>
              </main>
          </div>
      </div>
  
      <!-- Add Offer Modal -->
      <div class="modal fade" id="addOfferModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="addOfferModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h1 class="modal-title fs-5" id="addOfferModalLabel">Add New Category Offer</h1>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <form id="addOfferForm">
                <div class="mb-3">
                  <label for="offerName" class="form-label">Offer Name</label>
                  <div class="input-group">
                    <input type="text" class="form-control" id="offerName" name="offerName">
                    <button class="btn btn-outline-secondary" type="button" onclick="updateOfferNameInput()">Generate</button>
                  </div>
                </div>
                <div class="mb-3">
                  <label for="categorySelect" class="form-label">Select Category</label>
                  <select id="categorySelect" name="categoryId" class="form-select" required>
                    <option value="">Select a category</option>
                    <% let availableCategories = 0; %>
                    <% categories.forEach(function(category) { %>
                        <% if (!category.hasActiveOffer) { %>
                            <option value="<%= category._id %>"><%= category.name %> - <%= category.gender%> -</option>
                            <% availableCategories++; %>
                        <% } else { %>
                            <option value="<%= category._id %>" disabled><%= category.name %> (Offer active)</option>
                        <% } %>
                    <% }); %>
                    <% if (availableCategories === 0) { %>
                        <option value="" disabled>All categories already have active offers</option>
                    <% } %>
                </select>
                </div>
                <div class="mb-3">
                  <label for="discountPercentage" class="form-label">Offer Percentage</label>
                  <input type="number" class="form-control" id="discountPercentage" min="0" max="100">
                </div>
                <div class="mb-3">
                  <label for="startDate" class="form-label">Start Date</label>
                  <input type="date" class="form-control" id="startDate" >
                </div>
                <div class="mb-3">
                  <label for="endDate" class="form-label">End Date</label>
                  <input type="date" class="form-control" id="endDate">
                </div>
              </form>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" onclick="validateAndSubmit()">Add Offer</button>
            </div>
          </div>
        </div>
      </div>
  
      <script>

function generateRandomOfferName() {
    const adjectives = ['Special', 'Exclusive', 'Limited', 'Seasonal', 'Flash'];
    const nouns = ['Deal', 'Discount', 'Offer', 'Sale', 'Promotion'];
    const randomAdjective = adjectives[Math.floor(Math.random() * adjectives.length)];
    const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];
    const randomNumber = Math.floor(Math.random() * 100) + 1;
    return `${randomAdjective} ${randomNoun} ${randomNumber}`;
  }
  function updateOfferNameInput() {
    const offerNameInput = document.getElementById('offerName');
    offerNameInput.value = generateRandomOfferName();
  }

  
      function removeOffer(offerId, categoryId) {
          Swal.fire({
              title: 'Are you sure?',
              text: "You won't be able to revert this!",
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Yes, remove it!'
          }).then((result) => {
              if (result.isConfirmed) {
                  fetch(`/admin/removeCategoryOffer/${offerId}`, {
                      method: 'POST',
                      headers: {
                          'Content-Type': 'application/json',
                      },
                  })
                  .then(response => response.json())
                  .then(data => {
                      if (data.success) {
                          Swal.fire(
                              'Removed!',
                              'The category offer has been removed.',
                              'success'
                          ).then(() => {
                              location.reload();
                          });
                      } else {
                          Swal.fire(
                              'Error!',
                              'Failed to remove the category offer.',
                              'error'
                          );
                      }
                  })
                  .catch(error => {
                      console.error('Error:', error);
                      Swal.fire(
                          'Error!',
                          'An unexpected error occurred.',
                          'error'
                      );
                  });
              }
          });
      }
  
  









  function validateAndSubmit() {
    const offerNameInput = document.getElementById('offerName');
    const categorySelect = document.getElementById('categorySelect');
    const discountPercentageInput = document.getElementById('discountPercentage');
    const startDateInput = document.getElementById('startDate');
    const endDateInput = document.getElementById('endDate');

    
    let offerName = offerNameInput.value.trim();
    if (!offerName) {
      offerName = generateRandomOfferName();
      offerNameInput.value = offerName;
    }

    if (!validator.isLength(offerName, { min: 3, max: 50 })) {
      Swal.fire('Error', 'Offer name must be between 3 and 50 characters long.', 'error');
      return;
    }

  
    const discountPercentage = discountPercentageInput.value.trim();
    if (!validator.isInt(discountPercentage, { min: 1, max: 100 })) {
      Swal.fire('Error', 'Offer percentage must be a number between 1 and 100.', 'error');
      return;
    }

   
    const startDate = startDateInput.value;
  const endDate = endDateInput.value;
  if (!startDate) {
    Swal.fire('Error', 'Start date is required.', 'error');
    return;
  }


  if (!endDate) {
    Swal.fire('Error', 'End date is required.', 'error');
    return;
  }

  if (new Date(endDate) <= new Date(startDate)) {
    Swal.fire('Error', 'End date must be after the start date.', 'error');
    return;
  }

  
  const formData = {
        offerName: offerName,
        categoryId: categorySelect.value,
        discountPercentage: parseInt(discountPercentage),
        startDate: startDate,
        endDate: endDate,
        isActive: true
    };

    console.log('Form data to submit:', formData);

    fetch('/admin/addCategoryOffer', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(formData),
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: 'Category offer added successfully!',
          showConfirmButton: false,
          timer: 1500
        }).then(() => {
          location.reload();
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: data.message || 'Failed to add category offer. Please try again.',
        });
      }
    })
    .catch(error => {
      console.error('Error:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'An unexpected error occurred. Please try again.',
      });
    });
  }
















  document.addEventListener('DOMContentLoaded', function() {
    const categorySelect = document.getElementById('categorySelect');
    const submitButton = document.getElementById('submitOfferButton');

    function updateSubmitButton() {
        submitButton.disabled = categorySelect.value === "";
    }

    categorySelect.addEventListener('change', updateSubmitButton);
    updateSubmitButton();
    const generateButton = document.querySelector('button[onclick="generateRandomOfferName()"]');
    if (generateButton) {
      generateButton.onclick = updateOfferNameInput;
    }
  });
  
      
      </script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/validator/13.6.0/validator.min.js"></script>

  </body>
  </html>
