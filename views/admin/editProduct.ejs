<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .container {
            margin-top: 30px;
        }
        .form-container {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .form-container h1 {
            margin-bottom: 20px;
        }
        .img-preview {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        .preview-wrapper {
            position: relative;
        }
        .remove-preview {
            position: absolute;
            top: -10px;
            right: -10px;
            padding: 0 6px;
            font-size: 14px;
        }
    </style>
</head>
<body>
 

    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/admin">Dashboard</a></li>
                <li class="breadcrumb-item active" aria-current="page">Edit Product</li>
            </ol>
        </nav>
        <div class="form-container">
            <h1>Edit Product</h1>
            <form action="/admin/editProduct/<%= encodeURIComponent(productDetails._id) %>" method="post" enctype="multipart/form-data" id="editProductForm">
                <div class="d-flex flex-column flex-wrap" style="height: 300px;">
                    <div class="mb-3 px-3">
                        <label for="productName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="productName" value="<%= locals.productDetails.name %>" name="productName" >
                    </div>
                    <div class="mb-3 px-3">
                        <label for="price" class="form-label">Price</label>
                        <input type="number" min="0" class="form-control" id="price" name="price" value="<%= locals.productDetails.price %>">
                    </div>
                    <div class="mb-3 px-3">
                        <label for="gender" class="form-label">Gender</label>
                        <select class="form-select" id="gender" aria-label="Default select example" name="gender">
                            <option selected  value="<%= locals.productDetails.gender %>"><%= locals.productDetails.gender %></option>
                            <option value="<%= (locals.productDetails.gender === "mens")?'womens':'mens' %>"><%= (locals.productDetails.gender === "mens")?'womens':'mens' %></option>
                          </select>
                    </div>
                    <div class="mb-3 px-3">
                        <label for="brand" class="form-label">Brand</label>
                        <select class="form-select" aria-label="Default select example" name="brand">
                            <option value="nike" <%= locals.productDetails.brand === 'nike' ? 'selected' : '' %>>Nike</option>
                            <option value="puma" <%= locals.productDetails.brand === 'puma' ? 'selected' : '' %>>Puma</option>
                            <option value="adidas" <%= locals.productDetails.brand === 'adidas' ? 'selected' : '' %>>Adidas</option>
                        </select>
                    </div>
                    <div class="mb-3 px-3">
                        <label for="category" class="form-label">Category</label>
                        <select class="form-select mb-3" aria-label="Default select example" name="category" id="category">
                            <% if (Array.isArray(categories) && categories.length > 0) { %>
                                <% categories.forEach(function(category, index) { %>
                                    <% if (category) { %>
                                        <option value="<%= category?._id %>" <%= locals.productDetails.category._id.toString() === category._id.toString() ? 'selected' : '' %>><%= category?.name %>, (<%= category?.gender %>)</option>
                                    <% } %>
                                <% }) %>
                            <% } else { %>
                                <option value="">No categories available</option>
                            <% } %>
                        </select>
                    </div>
                    <div class="mb-3 px-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" rows="3" name="descriptionOfProduct"><%= locals.productDetails.description %></textarea>
                    </div>
                </div>
               
                <!-- variant start -->
                <div id="variants-container">
                    <% if (productDetails.variants.length > 0) { %>
                        <% productDetails.variants.forEach(function(variant, variantIndex) { %>
                            <div class="variant-section mb-4">
                                <h3>Variant <%= variantIndex + 1 %></h3>
                                <div class="mb-3">
                                    <label for="color-<%= variantIndex %>" class="form-label">Color</label>
                                    <input type="text" class="form-control" id="color-<%= variantIndex %>" name="variants[<%= variantIndex %>][color]" value="<%= variant.color %>">
                                </div>
                                <div class="mb-3">
                                    <label for="size-<%= variantIndex %>" class="form-label">Size</label>
                                    <!-- <input type="text" class="form-control" id="size-<%= variantIndex %>" name="variants[<%= variantIndex %>][size]" -->
                                    
                                    
                                  
                                    <select class="form-select form-control" aria-label="Default select example" id="size-<%= variantIndex %>" name="variants[<%= variantIndex %>][size]">
                                        <option value="">Size</option>
                                        <option value="uk8" <%= variant.size === 'uk8' ? 'selected' : '' %>>UK 8</option>
                                        <option value="uk10" <%= variant.size === 'uk10' ? 'selected' : '' %>>UK 10</option>
                                        <option value="uk12" <%= variant.size === 'uk12' ? 'selected' : '' %>>UK 12</option>
                                        <option value="uk14" <%= variant.size === 'uk14' ? 'selected' : '' %>>UK 14</option>
                                        <option value="uk16" <%= variant.size === 'uk16' ? 'selected' : '' %>>UK 16</option>
                                      </select>




                                </div>
                                <div class="mb-3">
                                    <label for="stock-<%= variantIndex %>" class="form-label">Stock</label>
                                    <input type="number" min="0" class="form-control" id="stock-<%= variantIndex %>" name="variants[<%= variantIndex %>][stock]" value="<%= variant.stock %>" min="1">
                                </div>

                                <% for (let i = 0; i < 3; i++) { %>
                                    <div class="mb-3">
                                        <label for="variantImage<%= i + 1 %>-<%= variantIndex %>" class="form-label">Image <%= i + 1 %></label>
                                        <input type="file" class="form-control variant-image" id="variantImage<%= i + 1 %>-<%= variantIndex %>" name="variants[<%= variantIndex %>][images][<%= i %>]" accept="image/*" data-variant="<%= variantIndex %>" data-index="<%= i %>">
                                        <label class="file-name-label" for="variantImage<%= i + 1 %>-<%= variantIndex %>">
                                            <% if (variant.imageUrls && variant.imageUrls[i]) { %>
                                                Current file: <%= path.basename(variant.imageUrls[i]) %>
                                            <% } else { %>
                                                No file selected
                                            <% } %>
                                        </label>
                                    </div>
                                <% } %>
                                
                                
                                
                                
                                

                                <div class="preview-container" id="previewContainer-<%= variantIndex %>">
                                    <% variant.imageUrls.forEach(function(url, imageIndex) { %>
                                        <input type="hidden" name="variants[<%= variantIndex %>][existingImages][<%= imageIndex %>]" value="<%= url %>">
                                        <div class="preview-wrapper" data-variant="<%= variantIndex %>" data-index="<%= imageIndex %>">
                                            <img class="img-preview" src="<%= url %>" alt="Image Preview <%= imageIndex + 1 %>">
                                            <button type="button" class="remove-preview btn btn-danger btn-sm">Ã—</button>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="variant-section mb-4">
                            <h3>Variant 1</h3>
                            <div class="mb-3">
                                <label for="color-0" class="form-label">Color</label>
                                <input type="text" class="form-control" id="color-0" name="variants[0][color]">
                            </div>
                            <div class="mb-3">
                                <label for="size-0" class="form-label">Size</label>
                                <input type="text" class="form-control" id="size-0" name="variants[0][size]">
                            </div>
                            <div class="mb-3">
                                <label for="stock-0" class="form-label">Stock</label>
                                <!-- <input type="number" class="form-control" id="stock-0" name="variants[0][stock]" min="1"> -->

                                <select class="form-select form-control" aria-label="Default select example" id="stock-0" name="variants[0][stock]" min="1">
                                    <option value="">Size</option>
                                    <option value="uk8" <%= variant.size === 'uk8' ? 'selected' : '' %>>UK 8</option>
                                    <option value="uk10" <%= variant.size === 'uk10' ? 'selected' : '' %>>UK 10</option>
                                    <option value="uk12" <%= variant.size === 'uk12' ? 'selected' : '' %>>UK 12</option>
                                    <option value="uk14" <%= variant.size === 'uk14' ? 'selected' : '' %>>UK 14</option>
                                    <option value="uk16" <%= variant.size === 'uk16' ? 'selected' : '' %>>UK 16</option>
                                  </select>




                                
                            </div>
                            <% for (let i = 0; i < 3; i++) { %>
                                <div class="mb-3">
                                    <label for="variantImage<%= i + 1 %>-0" class="form-label">Image <%= i + 1 %></label>
                                    <input type="file" class="form-control variant-image" id="variantImage<%= i + 1 %>-0" name="variants[0][images]" accept="image/*" data-variant="0" data-index="<%= i %>">
                                </div>
                            <% } %>
                            <div class="preview-container" id="previewContainer-0"></div>
                        </div>
                    <% } %>
                </div>
                <div class="row align-items-center">
                    <button type="button" class="btn btn-secondary mb-3" id="addVariantBtn">Add Another Variant</button>
                    <!-- variant end -->
                    <button type="submit" class="btn btn-primary">Edit Product</button>
                </div>
            </form>
        </div>
    </div>
    <div class="modal fade" id="cropperModal" tabindex="-1" aria-labelledby="cropperModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cropperModalLabel">Crop Image</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="img-container">
                        <img id="cropperImage" src="" alt="Image to crop" style="max-width: 100%;">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="cropButton">Crop & Save</button>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/validator@13.7.0/validator.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let cropper;
        let currentFileInput;
        let variantCount = <%= productDetails.variants.length %>;

        function previewImage(input) {
            currentFileInput = input;
            const file = input.files[0];
            const reader = new FileReader();
    
            reader.onload = function(e) {
                const cropperImage = document.getElementById('cropperImage');
                cropperImage.src = e.target.result;
                const cropperModal = new bootstrap.Modal(document.getElementById('cropperModal'));
                cropperModal.show();
    
                cropperModal._element.addEventListener('shown.bs.modal', function() {
                    setTimeout(() => {
                        if (cropper) {
                            cropper.destroy();
                        }
    
                        cropper = new Cropper(cropperImage, {
                            aspectRatio: 1,
                            viewMode: 1,
                        });
                    }, 100);
                });
            };
    
            if (file) {
                reader.readAsDataURL(file);
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            document.body.addEventListener('click', function(e) {
       
                if (e.target.classList.contains('remove-preview')) {
                    e.preventDefault();
                const wrapper = e.target.closest('.preview-wrapper');
                const variantIndex = wrapper.getAttribute('data-variant');
                const imageIndex = wrapper.getAttribute('data-index');
                const imageUrl = wrapper.querySelector('img').src;
                const productId = '<%= productDetails._id %>'; 

                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!',
                    showLoaderOnConfirm: true,
                    preConfirm: () => {
                        return fetch(`/admin/removeProductImage/${productId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ variantIndex, imageIndex, imageUrl }),
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                return data;
                            } else {
                                throw new Error(data.message || 'Failed to remove image');
                            }
                        })
                        .catch(error => {
                            Swal.showValidationMessage(`Request failed: ${error}`);
                        });
                    },
                    allowOutsideClick: () => !Swal.isLoading()
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Remove the preview image
                        wrapper.remove();

                        // Clear the file input
                        const fileInput = document.getElementById(`variantImage${parseInt(imageIndex) + 1}-${variantIndex}`);
                        fileInput.value = '';

                        // Update the file name label
                        const label = fileInput.nextElementSibling;
                        if (label && label.tagName === 'LABEL') {
                            label.textContent = 'No file selected';
                        }

                        Swal.fire({
                            title: 'Deleted!',
                            text: 'The image has been deleted.',
                            icon: 'success',
                            timer: 1500,
                            timerProgressBar: true,
                            showConfirmButton: false
                        });
                    }
                });
            }
        
    });

    document.body.addEventListener('change', function(e) {
        if (e.target.classList.contains('variant-image')) {
            previewImage(e.target);
        }
    });




          




    const fileInputs = document.querySelectorAll('.variant-image');
    fileInputs.forEach(input => {
        input.addEventListener('change', function(e) {
            const fileName = e.target.files[0].name;
            const label = e.target.nextElementSibling;
            if (label && label.tagName === 'LABEL') {
                label.textContent = fileName;
            } else {
                const newLabel = document.createElement('label');
                newLabel.textContent = fileName;
                newLabel.classList.add('mt-2', 'd-block');
                e.target.parentNode.insertBefore(newLabel, e.target.nextSibling);
            }
        });
    });



//    form validation 

document.getElementById("editProductForm").addEventListener("submit", function (event) {
  
     
            event.preventDefault();
            const form = event.target;

            // Validate form fields using Validator.js
            const productName = form.productName.value.trim();
            const price = form.price.value.trim();
            const description = form.descriptionOfProduct.value.trim();
            const gender = form.gender.value.trim();

            if (validator.isEmpty(productName)) {
              Swal.fire(
                "Validation Error",
                "Product Name is required",
                "error"
              );
              return;
            }

            if (!validator.isNumeric(price) || validator.isEmpty(price) || parseFloat(price) < 0) {
              Swal.fire(
                "Validation Error",
                "Price must be a valid number",
                "error"
              );
              return;
            }

            if (validator.isEmpty(description)) {
              Swal.fire("Validation Error", "Description is required", "error");
              return;
            }

           

            if (validator.isEmpty(gender)) {
              Swal.fire("Validation Error", "Gender is required", "error");
              return;
            }

            // Validate variants

            // Validate variants
            for (let i = 0; i < variantCount; i++) {
              const color = form[`variants[${i}][color]`].value.trim();
              const size = form[`variants[${i}][size]`].value.trim();
              const stock = form[`variants[${i}][stock]`].value.trim();
            //   const fileInputs = form.querySelectorAll(
            //     `input[name="variants[${i}][images]"]`
            //   );

              if (validator.isEmpty(color)) {
                Swal.fire(
                  "Validation Error",
                  `Color for Variant ${i + 1} is required`,
                  "error"
                );
                return;
              }

              if (validator.isEmpty(size)) {
                Swal.fire(
                  "Validation Error",
                  `Size for Variant ${i + 1} is required`,
                  "error"
                );
                return;
              }

              if (!validator.isNumeric(stock) || validator.isEmpty(stock) || parseFloat(stock) < 0) {
                Swal.fire(
                  "Validation Error",
                  `Stock for Variant ${i + 1} must be a valid number`,
                  "error"
                );
                return;
              }

              // Check if all 3 images are uploaded
            //   let uploadedImageCount = 0;
            //   fileInputs.forEach((fileInput) => {
            //     if (fileInput.files.length > 0) {
            //       uploadedImageCount++;
            //       const file = fileInput.files[0];
            //       if (!file.type.startsWith("image/")) {
            //         Swal.fire(
            //           "Validation Error",
            //           `File for Variant ${i + 1} must be an image`,
            //           "error"
            //         );
            //         return;
            //       }
            //     }
            //   });

            //   if (uploadedImageCount !== 3) {
            //     Swal.fire(
            //       "Validation Error",
            //       `Please upload exactly 3 images for Variant ${i + 1}`,
            //       "error"
            //     );
            //     // return;
            //   }
            }

            // If all validations pass, submit the form
            form.submit();
      });
       

 












      document.getElementById('addVariantBtn').addEventListener('click', function() {
    const variantsContainer = document.getElementById('variants-container');
    const newVariantSection = document.createElement('div');
    newVariantSection.className = 'variant-section mb-4';
    newVariantSection.innerHTML = `
        <h3>Variant ${variantCount + 1}</h3>
        <div class="mb-3">
            <label for="color-${variantCount}" class="form-label">Color</label>
            <input type="text" class="form-control" id="color-${variantCount}" name="variants[${variantCount}][color]">
        </div>
        <div class="mb-3">
            <label for="size-${variantCount}" class="form-label">Size</label>
            <select class="form-select form-control" aria-label="Default select example" id="size-${variantCount}" name="variants[${variantCount}][size]">
                <option value="">Size</option>
                <option value="uk8">UK 8</option>
                <option value="uk10">UK 10</option>
                <option value="uk12">UK 12</option>
                <option value="uk14">UK 14</option>
                <option value="uk16">UK 16</option>
            </select>
        </div>
        <div class="mb-3">
            <label for="stock-${variantCount}" class="form-label">Stock</label>
            <input type="number" min="0" class="form-control" id="stock-${variantCount}" name="variants[${variantCount}][stock]" min="1">
        </div>
        ${[...Array(3)].map((_, i) => `
            <div class="mb-3">
                <label for="variantImage${i + 1}-${variantCount}" class="form-label">Image ${i + 1}</label>
                <input type="file" class="form-control variant-image" id="variantImage${i + 1}-${variantCount}" name="variants[${variantCount}][images][${i}]" accept="image/*" data-variant="${variantCount}" data-index="${i}">
            </div>
        `).join('')}
        <div class="preview-container" id="previewContainer-${variantCount}"></div>
    `;
    variantsContainer.appendChild(newVariantSection);
    variantCount++;
});






        });

        document.getElementById('cropButton').addEventListener('click', function() {
            const canvas = cropper.getCroppedCanvas();
            canvas.toBlob(function(blob) {
                const url = URL.createObjectURL(blob);
                const variantIndex = currentFileInput.dataset.variant;
                const imageIndex = currentFileInput.dataset.index;
                const previewContainer = document.getElementById(`previewContainer-${variantIndex}`);
                const previewWrapper = document.createElement('div');
                previewWrapper.className = 'preview-wrapper';
                previewWrapper.innerHTML = `
                    <img class="img-preview" src="${url}" alt="Cropped Image Preview">
                    <button type="button" class="remove-preview btn btn-danger btn-sm">Ã—</button>
                `;
    
                const existingPreview = previewContainer.querySelector(`[data-index="${imageIndex}"]`);
                if (existingPreview) {
                    existingPreview.remove();
                }
    
                previewWrapper.setAttribute('data-variant', variantIndex);
                previewWrapper.setAttribute('data-index', imageIndex);
                previewContainer.appendChild(previewWrapper);
    
                const croppedFile = new File([blob], currentFileInput.files[0].name, { type: 'image/jpeg' });
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(croppedFile);
                currentFileInput.files = dataTransfer.files;
    
                cropper.destroy();
                const cropperModal = bootstrap.Modal.getInstance(document.getElementById('cropperModal'));
                cropperModal.hide();
            }, 'image/jpeg');
        });
    </script>
</body>
</html>
