<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Add Men's Product</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.css"
      rel="stylesheet"
    />
    <style>
      /* input[type="text"],[type="number"],select,textarea{
         
         border: 1px  solid ;
      } */
      body {
        background-color: #f8f9fa;
      }
      .container {
        margin-top: 30px;
      }
      .form-container {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }
      .form-container h1 {
        margin-bottom: 20px;
      }
      .img-preview {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border: 1px solid #ddd;
        border-radius: 4px;
      }
      .preview-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
      }
      .preview-wrapper {
        position: relative;
      }
      .remove-preview {
        position: absolute;
        top: -10px;
        right: -10px;
        padding: 0 6px;
        font-size: 14px;
      }
    </style>
  </head>
  <body>

<!-- flash message  -->
<% if (locals.successMessage && locals.successMessage.length > 0) { %>
  <div id="successAlert" class="alert alert-success" role="alert"
  style="position: absolute;top: 0;right: 0;z-index: 50;left: 0;"
  >
    <%= locals.successMessage %>
  </div>
<% } %>

<% if (locals.errorMessage && locals.errorMessage.length > 0) { %>
  <div id="errorAlert" class="alert alert-danger" role="alert"
  style="position: absolute;top: 0;right: 0;z-index: 50;left: 0;"
  >
    <%= locals.errorMessage %>
  </div>
<% } %>











    <div class="container">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/admin">Dashboard</a></li>
          <li class="breadcrumb-item active" aria-current="page">
            Add Product
          </li>
        </ol>
      </nav>
      <div class="form-container">
        <h1>Add Products</h1>
        <form
          id="addProductForm"
          action="/admin/addProducts"
          method="post"
          enctype="multipart/form-data"
        >
          <!-- Form Fields -->
           <div class="d-flex flex-column flex-wrap" style="height: 300px;">
            <div class="mb-3 px-3">
              <label for="productName" class="form-label">Product Name</label>
              <input
                type="text"
                class="form-control"
                id="productName"
                name="productName"
              />
            </div>
            <div class="mb-3 px-3">
              <label for="price" class="form-label">Price</label>
              <input type="number" class="form-control" id="price" name="price" />
            </div>
            <div class="mb-3 px-3">
              <label for="gender" class="form-label">Gender</label>
              <select
                class="form-select"
                aria-label="Default select example"
                id="gender"
                name="gender"
              >
                <option selected value="">Gender</option>
                <option value="mens">mens</option>
                <option value="womens">womens</option>
              </select>
            </div>
            <div class="mb-3 px-3">
              <label for="brand" class="form-label">Brand</label>
              <select
                class="form-select"
                aria-label="Default select example"
                name="brand"
              >
                <option value="nike">Nike</option>
                <option value="puma">Puma</option>
                <option value="adidas">Adidas</option>
              </select>
            </div>
            <div class="mb-3 px-3">
              <label for="category" class="form-label">Category</label>
              <select
                class="form-select mb-3"
                aria-label="Default select example"
                name="category"
                id="category"
              >
                <% if (Array.isArray(categories) && categories.length > 0) { %> <%
                categories.forEach(function(category, index) { %> <% if
                (category?.gender === 'mens') { %>
                <option value="<%= category?._id %>">
                  <%= category?.name %>, (<%= category?.gender %>)
                </option>
                <% } %> <% }) %> <% } else { %>
                <option value="">No categories available</option>
                <% } %>
              </select>
            </div>
            <div class="mb-3 px-3">
              <label for="description" class="form-label">Description</label>
              <textarea
                class="form-control"
                id="description"
                rows="3"
                name="descriptionOfProduct"
              ></textarea>
            </div>
           </div>
         
          <!-- Variant Section -->
          <div id="variants-container">
            <div class="variant-section mb-4 d-flex flex-column flex-wrap" style="height: 350px;">
              <h3>Variant 1</h3>
              <div class="mb-3 px-3">
                <label for="color-0" class="form-label">Color</label>
                <input
                  type="text"
                  class="form-control"
                  id="color-0"
                  name="variants[0][color]"
                />
              </div>
              <div class="mb-3 px-3">
                <label for="size-0" class="form-label">Size</label>

                <select class="form-select" aria-label="Default select example"  id="size-0" name="variants[0][size]">
  <option selected value="">Size</option>
  <option value="uk8">uk8</option>
  <option value="uk10">uk10</option>
  <option value="uk12">uk12</option>
  <option value="uk14">uk14</option>
  <option value="uk16">uk16</option>
</select>



              </div>
              <div class="mb-3 px-3">
                <label for="stock-0" class="form-label">Stock</label>
                <input
                  type="number"
                  class="form-control"
                  id="stock-0"
                  name="variants[0][stock]"
                  min="1"
                />
              </div>
              <div class="mb-3 mt-5 px-3">
                <label for="variantImage1-0" class="form-label">Image 1</label>
                <input
                  type="file"
                  class="form-control variant-image"
                  id="variantImage1-0"
                  name="variants[0][images]"
                  accept="image/*"
                  data-variant="0"
                  data-index="0"
                />
              </div>
              <div class="mb-3 px-3">
                <label for="variantImage2-0" class="form-label">Image 2</label>
                <input
                  type="file"
                  class="form-control variant-image"
                  id="variantImage2-0"
                  name="variants[0][images]"
                  accept="image/*"
                  data-variant="0"
                  data-index="1"
                />
              </div>
              <div class="mb-3 px-3">
                <label for="variantImage3-0" class="form-label">Image 3</label>
                <input
                  type="file"
                  class="form-control variant-image"
                  id="variantImage3-0"
                  name="variants[0][images]"
                  accept="image/*"
                  data-variant="0"
                  data-index="2"
                />
              </div>
          
              
              <div class="preview-container" id="previewContainer-0"></div>
              
            </div>
          </div>
          <div class="row align-items-center">
            <button
              type="button"
              class="btn btn-secondary mb-3"
              id="addVariantBtn"
            >
              Add Another Variant
            </button>
            <button type="submit" class="btn btn-primary">Add Product</button>
          </div>
        </form>
      </div>
    </div>
    <div
      class="modal fade"
      id="cropperModal"
      tabindex="-1"
      aria-labelledby="cropperModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="cropperModalLabel">Crop Image</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <div class="img-container">
              <img
                id="cropperImage"
                src=""
                alt="Image to crop"
                style="max-width: 100%"
              />
            </div>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button type="button" class="btn btn-primary" id="cropButton">
              Crop & Save
            </button>
          </div>
        </div>
      </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/validator@13.7.0/validator.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      let cropper;
      let currentFileInput;
      let variantCount = 1;

      function previewImage(input) {
        currentFileInput = input;
        const file = input.files[0];
        const reader = new FileReader();

        reader.onload = function (e) {
          const cropperImage = document.getElementById("cropperImage");
          cropperImage.src = e.target.result;
          const cropperModal = new bootstrap.Modal(
            document.getElementById("cropperModal")
          );
          cropperModal.show();

          cropperModal._element.addEventListener("shown.bs.modal", function () {
            setTimeout(() => {
              if (cropper) {
                cropper.destroy();
              }

              cropper = new Cropper(cropperImage, {
                aspectRatio: 1,
                viewMode: 1,
              });
            }, 100);
          });
        };

        if (file) {
          reader.readAsDataURL(file);
        }
      }

      document.addEventListener("DOMContentLoaded", function () {
        document.body.addEventListener("click", function (e) {
          if (e.target.classList.contains("remove-preview")) {
            const wrapper = e.target.closest(".preview-wrapper");
            const variantIndex = wrapper.getAttribute("data-variant");
            const imageIndex = wrapper.getAttribute("data-index");
            document.getElementById(
              `variantImage${parseInt(imageIndex) + 1}-${variantIndex}`
            ).value = "";
            wrapper.remove();
          }
        });

        document.body.addEventListener("change", function (e) {
          if (e.target.classList.contains("variant-image")) {
            previewImage(e.target);
          }
        });

        document
          .getElementById("addVariantBtn")
          .addEventListener("click", function () {
            const variantsContainer =
              document.getElementById("variants-container");
            const newVariantSection = document.createElement("div");

            newVariantSection.className = "variant-section mb-4 d-flex flex-column flex-wrap";
            newVariantSection.style.height = "350px"
            newVariantSection.innerHTML = `
                    <h3>Variant ${variantCount + 1}</h3>
                    <div class="mb-3 px-3">
                        <label for="color-${variantCount}" class="form-label">Color</label>
                        <input type="text" class="form-control" id="color-${variantCount}" name="variants[${variantCount}][color]">
                    </div>
                    <div class="mb-3  px-3">
                        <label for="size-${variantCount}" class="form-label">Size</label>
                       

                                  
                <select class="form-select" aria-label="Default select example"  id="size-${variantCount}" name="variants[${variantCount}][size]">
  <option selected value="">Size</option>
  <option value="uk8">uk8</option>
  <option value="uk10">uk10</option>
  <option value="uk12">uk12</option>
  <option value="uk14">uk14</option>
  <option value="uk16">uk16</option>
</select>






                    </div>
                    <div class="mb-3  px-3">
                        <label for="stock-${variantCount}" class="form-label">Stock</label>
                        <input type="number" class="form-control" id="stock-${variantCount}" name="variants[${variantCount}][stock]" min="1">
                    </div>
                    <div class="mb-3 mt-4  px-3">
                        <label for="variantImage1-${variantCount}" class="form-label">Image 1</label>
                        <input type="file" class="form-control variant-image" id="variantImage1-${variantCount}" name="variants[${variantCount}][images]" accept="image/*" data-variant="${variantCount}" data-index="0">
                    </div>
                    <div class="mb-3  px-3">
                        <label for="variantImage2-${variantCount}" class="form-label">Image 2</label>
                        <input type="file" class="form-control variant-image" id="variantImage2-${variantCount}" name="variants[${variantCount}][images]" accept="image/*" data-variant="${variantCount}" data-index="1">
                    </div>
                    <div class="mb-3  px-3">
                        <label for="variantImage3-${variantCount}" class="form-label">Image 3</label>
                        <input type="file" class="form-control variant-image" id="variantImage3-${variantCount}" name="variants[${variantCount}][images]" accept="image/*" data-variant="${variantCount}" data-index="2">
                    </div>
                    <div class="preview-container mt-3" id="previewContainer-${variantCount}"></div>
                `;
            variantsContainer.appendChild(newVariantSection);
            variantCount++;
          });

        document
          .getElementById("addProductForm")
          .addEventListener("submit", function (event) {
            event.preventDefault();
            const form = event.target;

            // Validate form fields using Validator.js
            const productName = form.productName.value.trim();
            const price = form.price.value.trim();
            const description = form.descriptionOfProduct.value.trim();
            const gender = form.gender.value.trim();

            if (validator.isEmpty(productName)) {
              Swal.fire(
                "Validation Error",
                "Product Name is required",
                "error"
              );
              return;
            }

            if (!validator.isNumeric(price) || validator.isEmpty(price)) {
              Swal.fire(
                "Validation Error",
                "Price must be a valid number",
                "error"
              );
              return;
            }
           
           

             if (validator.isEmpty(gender)) {
              Swal.fire("Validation Error", "Gender is required", "error");
              return;
            }

         


            if (validator.isEmpty(description)) {
              Swal.fire("Validation Error", "Description is required", "error");
              return;
            }

            // if (gender === 'Gender') {
            //     Swal.fire('Validation Error', 'Gender is required', 'error');
            //     return;
            // }
           
           

            // Validate variants
            for (let i = 0; i < variantCount; i++) {
              const color = form[`variants[${i}][color]`].value.trim();
              const size = form[`variants[${i}][size]`].value.trim();
              const stock = form[`variants[${i}][stock]`].value.trim();
              const fileInputs = form.querySelectorAll(
                `input[name="variants[${i}][images]"]`
              );

              if (validator.isEmpty(color)) {
                Swal.fire(
                  "Validation Error",
                  `Color for Variant ${i + 1} is required`,
                  "error"
                );
                return;
              }

              if (validator.isEmpty(size)) {
                Swal.fire(
                  "Validation Error",
                  `Size for Variant ${i + 1} is required`,
                  "error"
                );
                return;
              }

              if (!validator.isNumeric(stock) || validator.isEmpty(stock)) {
                Swal.fire(
                  "Validation Error",
                  `Stock for Variant ${i + 1} must be a valid number`,
                  "error"
                );
                return;
              }

              // Check if all 3 images are uploaded
              let uploadedImageCount = 0;
              fileInputs.forEach((fileInput) => {
                if (fileInput.files.length > 0) {
                  uploadedImageCount++;
                  const file = fileInput.files[0];
                  if (!file.type.startsWith("image/")) {
                    Swal.fire(
                      "Validation Error",
                      `File for Variant ${i + 1} must be an image`,
                      "error"
                    );
                    return;
                  }
                }
              });

              if (uploadedImageCount !== 3) {
                Swal.fire(
                  "Validation Error",
                  `Please upload exactly 3 images for Variant ${i + 1}`,
                  "error"
                );
                return;
              }
            }

            // If all validations pass, submit the form
            form.submit();
          });
      });

    //    cropper js
      document
        .getElementById("cropButton")
        .addEventListener("click", function () {
          const canvas = cropper.getCroppedCanvas();
          canvas.toBlob(function (blob) {
            const url = URL.createObjectURL(blob);
            const variantIndex = currentFileInput.dataset.variant;
            const imageIndex = currentFileInput.dataset.index;
            const previewContainer = document.getElementById(
              `previewContainer-${variantIndex}`
            );
            const previewWrapper = document.createElement("div");
            previewWrapper.className = "preview-wrapper";
            previewWrapper.innerHTML = `
                    <img class="img-preview" src="${url}" alt="Cropped Image Preview">
                    <button type="button" class="remove-preview btn btn-danger btn-sm">×</button>
                `;

            const existingPreview = previewContainer.querySelector(
              `[data-index="${imageIndex}"]`
            );
            if (existingPreview) {
              existingPreview.remove();
            }

            previewWrapper.setAttribute("data-variant", variantIndex);
            previewWrapper.setAttribute("data-index", imageIndex);
            previewContainer.appendChild(previewWrapper);

            const croppedFile = new File(
              [blob],
              currentFileInput.files[0].name,
              { type: "image/jpeg" }
            );
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(croppedFile);
            currentFileInput.files = dataTransfer.files;

            cropper.destroy();
            const cropperModal = bootstrap.Modal.getInstance(
              document.getElementById("cropperModal")
            );
            cropperModal.hide();
          }, "image/jpeg");
        });



        // Hide flash messages after 5 seconds
        setTimeout(function() {
            const successAlert = document.getElementById('successAlert');
            if (successAlert) {
                successAlert.style.display = 'none';
            }
            const errorAlert = document.getElementById('errorAlert');
            if (errorAlert) {
                errorAlert.style.display = 'none';
            }
        }, 3000);


    </script>
  </body>
</html>
