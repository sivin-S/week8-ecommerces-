<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Coupons History</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            font-family:  sans-serif;
            background-color: #eef7ff;
        }
        .sidebar {
            background-color: #4D869C;
            color: #eef7ff;
            height: 100vh;
            position: fixed;
            width: 280px;
            overflow-y: auto;
            border: 3px solid  #4D869C;
            padding: 15px 10px;
        }
        .sidebar .nav-link {
            margin-bottom: 15px;
            padding: 12px 12px;
            text-align: center;
        }

        .in-active{
            border: 3px solid  #eef7ff;
            color: #eef7ff !important;
            border-radius: 12px;
        }

        .sidebar .nav-link.active {
            background-color: #eef7ff;
            color: #4D869C;
            border-radius: 12px;
        }

        .main-content {
            margin-left: 250px;
            padding: 20px;
        } 

        .table-responsive {
            overflow-x: auto;
        }
        .search-bar {
            max-width: 300px;
            margin-bottom: 20px;
        }
        .search-input {
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            margin-left: 10px;
        }

        .card {
            margin-bottom: 20px;
        }
        .user-list-header {
            background-color: #4D869C;
            color: #EEF7FF;
            padding: 10px;
            border-radius: 5px 5px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
    
        input[type="search"]{
           color: #4D869C;
           padding: 12px 12px;
           margin-top: 5px;
        }
      
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-3 col-lg-2 d-md-block sidebar collapse">
                <div class="position-sticky pt-3">
                    <div class="mb-4 px-3 text-center" >
                        <i class="fas fa-user-circle"></i> Admin Dashboard
                    </div>
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link in-active" href="/admin"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link in-active" href="/admin/userList"><i class="fas fa-users"></i> Users</a>
                        </li>
                       
                        <!-- <li class="nav-item">
                            <a class="nav-link in-active" href="/admin/paymentMethods"><i class="fas fa-credit-card"></i> Payment</a>
                        </li> -->
                        <li class="nav-item">
                            <a class="nav-link in-active" href="/admin/salesReport"><i class="fas fa-chart-bar"></i> Report</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link in-active" href="/admin/categories"><i class="fas fa-folder"></i> Category</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link in-active" href="/admin/products"><i class="fas fa-folder"></i>
                                Product Management</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link in-active" href="/admin/orders"><i class="fas fa-truck"></i> Orders Management</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link in-active" href="/admin/transactionHistory"><i class="fas fa-history"></i> Transaction history</a>
                        </li>
                      
                      
                        <li class="nav-item">
                            <a class="nav-link active" href="/admin/couponsHistory"><i class="fas fa-ticket-alt"></i> Coupons history</a>
                        </li>
                        <li class="nav-item">
                            <!-- <a class="nav-link in-active"><i class="fas fa-ticket-alt"></i> Coupons history</a> -->
                             <select class="form-select" id="offerSelect" aria-label="Default select example"
                             style="
                                margin-bottom: 15px;
                                padding: 12px 12px;
                                text-align: center;
                                border: 3px solid  #eef7ff;
                                color: #eef7ff;
                                background-color: #4D869C;
                                border-radius: 12px;
                                " 
                             >
                                <option selected disabled class="selectOption">Offers</option>
                                <option  value="/admin/productOffers" class="selectOption">Product Offers</option>
                                <option  value="/admin/categoryOffers" class="selectOption">Category Offers</option>
                                <!-- <option value="3" class="selectOption">Referral Offers</option> -->
                              </select>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link in-active" href="/admin/notifications"><i class="fas fa-bell"></i> Notifications</a>
                        </li>
                    </ul>
                    <div class="mt-5 px-3">
                        <a href="/admin/logout"><button class="btn btn-outline-light w-100" style="padding: 12px;background-color: #EEF7FF;color: #4D869C;margin-top: -20px;">LOGOUT</button></a>
                    </div>
                </div>
            </nav>
            <!-- Main content -->
            <main  class="ms-sm-auto  px-md-4 main-content  p-5" style="width: 80%;">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom"
                style="border-bottom-color: #4D869C !important;"
                >
                    <h1 class="h2" style="color: #4D869C;">Dashboard / Coupons History</h1>
                </div>

                <div class="bg-white p-4 rounded shadow-sm" style="color: #4D869C !important;">
                    <div class="d-flex justify-content-between align-items-center">
                        <h2>Coupons</h2>
                       
                        
                            <button  data-bs-toggle="modal" data-bs-target="#staticBackdrop" class="btn" style="border: 1px solid #4D869C;color: #4D869C;">Create Coupon</button>
                        
                    </div>
                    <input type="search" class="form-control mt-3" id="couponSearch" onkeyup="searchTable('couponTable', 'couponSearch')" placeholder="Search for coupons.."
                    style="outline-color: #4D869C !important;"
                    >
                    <div class="table-responsive mt-3">
                        <table class="table table-hover text-center" id="couponTable" style="color: #4D869C;">
                            <thead>
                                <tr>
                                    <th>Coupon Code</th>
                                    <th>Discount</th>
                                    <th>Minimum Purchase Amount</th>
                                    <th>Start Date</th>
                                    <th>Expiry Date</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                              <% coupons.forEach(coupon => { %>
                                <tr data-coupon-id="<%= coupon._id %>">
                                    <td><%= coupon.couponCode %></td>
                                    <td><%= coupon.offerPrice %></td>
                                    <td><%= coupon.minPurchaseAmount %></td>
                                    <td><%= new Date(coupon.startDate).toLocaleDateString() %></td>
                                    <td><%= new Date(coupon.expiryDate).toLocaleDateString() %></td>
                                    <td><span class="<%= coupon.status ? 'text-success' : 'text-danger' %>"><%= coupon.status ? 'Active' : 'Expired' %></span></td>
                                    <td><button class="btn btn-danger btn-sm delete-coupon">Delete</button></td>
                                  </tr>
                              <% }); %>
                            </tbody>
                        </table>
                        <nav aria-label="Coupon table navigation">
                            <ul class="pagination justify-content-center" id="pagination">
                                <ul class="pagination">
                                   
                                    <% if(currentPage>=1){%>
                                        <li class="page-item">
                                            <a class="page-link" href="?page=<%=currentPage-1%>&limit=<%=limit%>" aria-label="Previous">
                                                <span aria-hidden="true">&laquo;</span>
                                            </a>
                                        </li>

                                    <%}%>
                                    <% for(let i = 1; i <= totalPages; i++){ %>
                                        <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                            <a class="page-link" href="?page=<%= i %>&limit=<%=limit%>"><%= i %></a>
                                        </li>
                                    <% } %>
                                    <% if(currentPage<totalPages){%>
                                        <li class="page-item">
                                            <a class="page-link" href="?page=<%=currentPage+1%>&limit=<%=limit%>" aria-label="Next">
                                                <span aria-hidden="true">&raquo;</span>
                                            </a>
                                        </li>
                                    <%}%>
                                </ul>
                            </ul>
                        </nav>
                    </div>
                </div>
            </main>
        </div>
    </div>

   <!-- modal -->

   <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Create Coupon</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Add your form or content here -->
                <form  id="couponForm" action="/admin/couponsCreate" method="post">
                    <div class="mb-3">
                        <label for="couponCode" class="form-label">Coupon Code</label>
                        <div class="input-group">
                            <input type="text" class="form-control" id="couponCode" name="couponCode" placeholder="Enter coupon code">
                            <button class="btn btn-outline-secondary" type="button" onclick="generateCouponCode()">Generate</button>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="offerPrice" class="form-label">Offer Discount</label>
                        <input type="number" class="form-control" id="offerPrice" name="offerPrice" placeholder="Enter Offer Discount in %">
                    </div>
                    <div class="mb-3">
                        <label for="minPurchaseAmount" class="form-label">Minimum Price</label>
                        <input type="number" class="form-control" id="minPurchaseAmount" name="minPurchaseAmount" placeholder="Enter Minimum Price">
                    </div>
                    <div class="mb-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="startDate" name="startDate">
                    </div>
                    <div class="mb-3">
                        <label for="expiryDate" class="form-label">Expiry Date</label>
                        <input type="date" class="form-control" id="expiryDate" name="expiryDate">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="validateForm()">Save Coupon</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/validator@13.7.0/validator.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>


    <script>
    

 


    document.addEventListener('DOMContentLoaded', function() {
    const couponForm = document.getElementById('couponForm');
    const couponTable = document.getElementById('couponTable');

    if (couponForm) {
        couponForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const couponData = {
                couponCode: document.getElementById('couponCode').value,
                offerPrice: document.getElementById('offerPrice').value,
                startDate: document.getElementById('startDate').value,
                expiryDate: document.getElementById('expiryDate').value,
                minPurchaseAmount: document.getElementById('minPurchaseAmount').value
            };

            createCoupon(couponData);
        });
    }




});


  

    function validateForm() {

       

var couponCode = document.getElementById('couponCode').value;
var offerPrice = document.getElementById('offerPrice').value;
var startDate = document.getElementById('startDate').value;

var minPurchaseAmount = document.getElementById('minPurchaseAmount').value;
var expiryDate = document.getElementById('expiryDate').value;



 couponCode = validator.trim(couponCode);

if (validator.isEmpty(couponCode)) {

    Swal.fire('Error', 'Coupon Code is required', 'error');

    return;

}


if (!validator.isInt(offerPrice, { min: 0 })) {
    Swal.fire('Error', 'Offer Price must be a non-negative integer', 'error');

    return;
}

if (!validator.isInt(minPurchaseAmount, { min: 0 })) {

    Swal.fire('Error', 'Minimum Price must be a non-negative integer', 'error');
    return;

}

 
if (!validator.isDate(startDate)) {
        Swal.fire('Error', 'Invalid Start Date', 'error');
        return;
    }
    


if (!validator.isDate(expiryDate)) {

    Swal.fire('Error', 'Invalid Expiry Date', 'error');

    return;

}

const currentDate = new Date();
    currentDate.setHours(0, 0, 0, 0);
    const startDateObj = new Date(startDate);
    const expiryDateObj = new Date(expiryDate);

    if (startDateObj < currentDate) {
        Swal.fire('Error', 'Start Date must be today or in the future', 'error');
        return;
    }

    if (expiryDateObj <= startDateObj) {
        Swal.fire('Error', 'Expiry Date must be after the Start Date', 'error');
        return;
    }


const formattedStartDate = new Date(startDate).toISOString();
const formattedExpiryDate = new Date(expiryDate).toISOString();
 
 createCoupon(couponCode, offerPrice, minPurchaseAmount, formattedStartDate, formattedExpiryDate);

}



function createCoupon(couponCode, offerPrice, minPurchaseAmount, startDate, expiryDate) {
    const couponDatas = {
        couponCode: couponCode,
        offerPrice: parseFloat(offerPrice),
        minPurchaseAmount: parseFloat(minPurchaseAmount),
        startDate: startDate,
        expiryDate: expiryDate
    };

    console.log('Sending coupon data:', JSON.stringify(couponDatas)); 


    fetch('/admin/couponsCreate', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(couponDatas)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire('Success', data.message, 'success');

           
            refreshCouponList();
            clearModalFields();
            window.location.reload();
        } else {
            Swal.fire('Error', data.message, 'error');
        }
    })
    .catch((error) => {
        console.error('Error:', error);
        Swal.fire('Error', 'An error occurred while creating the coupon', 'error');
    });
}

function clearModalFields() {
    document.getElementById('couponCode').value = '';
    document.getElementById('offerPrice').value = '';
    document.getElementById('minPurchaseAmount').value = '';
    document.getElementById('expiryDate').value = '';
}


function refreshCouponList() {
    fetch('/admin/refreshCouponList')
    .then(response => response.json())
    .then(data => {
        if (data.success) {
         
            const couponList = document.getElementById('couponList');
            if (couponList) {
                couponList.innerHTML = '';
                data.coupon.forEach(coupon => {
                    const listItem = document.createElement('li');
                    listItem.textContent = `${coupon.couponCode} - ${coupon.offerPrice}`;
                    couponList.appendChild(listItem);
                });
            }
        } else {
            console.error('Failed to refresh coupon list:', data.error);
        }
    })
    .catch(error => {
        console.error('Error refreshing coupon list:', error);
    });
}





function updateCouponTable(coupons) {
    const tableBody = document.querySelector('#couponTable tbody');
    tableBody.innerHTML = '';
    coupons.forEach(coupon => {
        const isExpired = new Date(coupon.expiryDate) < new Date();
        const statusClass = coupon.status ? 'text-success' : 'text-danger';
        const statusText = coupon.status ? 'Active' : 'Expired';
        const row = `
            <tr data-coupon-id="${coupon._id}">
                <td>${coupon.couponCode}</td>
                <td>${coupon.offerPrice}</td>
                <td>${coupon.minPurchaseAmount}</td>
                <td>${new Date(coupon.expiryDate).toLocaleDateString()}</td>
                <td><span class="${statusClass}">${statusText}</span></td>
                <td><button class="btn btn-danger btn-sm delete-coupon">Delete</button></td>
            </tr>
        `;
        tableBody.innerHTML += row;
    });
}

document.addEventListener('DOMContentLoaded', function() {
    const couponTable = document.getElementById('couponTable');
    
    if (couponTable) {
        couponTable.addEventListener('click', function(e) {
            if (e.target && e.target.classList.contains('delete-coupon')) {
                const couponId = e.target.closest('tr').dataset.couponId;
                removeCoupon(couponId);
            }
        });
    }
});

function removeCoupon(couponId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/removeCoupon/${couponId}`, { 
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire('Deleted!', 'Coupon has been deleted.', 'success');
                    // Remove the row from the table
                    document.querySelector(`tr[data-coupon-id="${couponId}"]`).remove();
                } else {
                    Swal.fire('Error', data.message || 'Failed to remove coupon', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire('Error', 'An unexpected error occurred', 'error');
            });
        }
    });
}















        function searchTable(tableId, inputId) {
            var input, filter, table, tr, td, i, j, txtValue;
            input = document.getElementById(inputId);
            filter = input.value.toLowerCase();
            table = document.getElementById(tableId);
            tr = table.getElementsByTagName("tr");
            for (i = 1; i < tr.length; i++) {
                tr[i].style.display = "none";
                td = tr[i].getElementsByTagName("td");
                for (j = 0; j < td.length; j++) {
                    if (td[j]) {
                        txtValue = td[j].textContent || td[j].innerText;
                        if (txtValue.toLowerCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                            break;
                        }
                    }
                }
            }
        }

      

        function generateCouponCode() {
    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    let result = '';
    const length = 8;
    for (let i = 0; i < length; i++) {
        result += characters.charAt(Math.floor(Math.random() * characters.length));
    }
    document.getElementById('couponCode').value = result;
}


document.getElementById('offerSelect').addEventListener('change', function() {
    var selectedOption = this.value;
    if (selectedOption) {
        window.location.href = selectedOption;
    }
});
    </script>
</body>
</html>
