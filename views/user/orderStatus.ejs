<!DOCTYPE html>
<html lang="en">
<head> 
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Status</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }
        .btn-pink {
            background-color: #e91e63;
            color: white;
        }
        .table-responsive {
            overflow-x: auto;
        }
        .search-bar {
            max-width: 300px;
            margin-bottom: 20px;
        }
        .breadcrumb {
            background-color: #f8f9fa;
            border-radius: 0;
        }
        .breadcrumb-item + .breadcrumb-item::before {
            content: ">";
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <main class="col-md-12 ms-sm-auto col-lg-12 px-md-4 main-content">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">Order Status</h1>
                </div>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Order Status</li>
                    </ol>
                </nav>
                <div class="bg-white p-4 rounded shadow-sm">
                    <div class="search-bar">
                        <input type="text" class="form-control" id="orderSearch" placeholder="Search for orders.." onkeyup="searchTable()">
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover" id="orderTable">
                            <thead>
                                <tr>
                                    <th>No.</th>
                                    <th>Product Name</th>
                                    <th>Order Date</th>
                                    <th>Customer Name</th>
                                    <th>Quantity</th>
                                    <th>Order Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="orderTableBody">
                                <!-- Order rows will be dynamically inserted here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script>
        // Mock data - Replace this with actual data fetching
        const orders = [
            { id: 1, productName: 'Product 1', orderDate: '2023-07-01', customerName: 'John Doe', quantity: 2, orderStatus: 'Completed' },
            { id: 2, productName: 'Product 2', orderDate: '2023-07-02', customerName: 'Jane Smith', quantity: 1, orderStatus: 'Cancelled' },
            { id: 3, productName: 'Product 3', orderDate: '2023-07-03', customerName: 'Alice Johnson', quantity: 3, orderStatus: 'Processing' },
            // Add more orders as needed
        ];

        document.addEventListener('DOMContentLoaded', function() {
            const tableBody = document.getElementById('orderTableBody');
            orders.forEach((order, index) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${order.productName}</td>
                    <td>${order.orderDate}</td>
                    <td>${order.customerName}</td>
                    <td>${order.quantity}</td>
                    <td><span class="badge ${getStatusBadgeClass(order.orderStatus)}">${order.orderStatus}</span></td>
                    <td><button class="btn btn-danger btn-sm" onclick="cancelOrder(this)" ${order.orderStatus === 'Cancelled' ? 'disabled' : ''}>Cancel</button></td>
                `;
                tableBody.appendChild(row);
            });
        });

        function getStatusBadgeClass(status) {
            switch (status) {
                case 'Completed':
                    return 'bg-success';
                case 'Cancelled':
                    return 'bg-danger';
                case 'Processing':
                    return 'bg-primary';
                default:
                    return 'bg-secondary';
            }
        }

        function searchTable() {
            var input, filter, table, tr, td, i, j, txtValue;
            input = document.getElementById("orderSearch");
            filter = input.value.toLowerCase();
            table = document.getElementById("orderTable");
            tr = table.getElementsByTagName("tr");
            for (i = 1; i < tr.length; i++) {
                tr[i].style.display = "none";
                td = tr[i].getElementsByTagName("td");
                for (j = 0; j < td.length; j++) {
                    if (td[j]) {
                        txtValue = td[j].textContent || td[j].innerText;
                        if (txtValue.toLowerCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                            break;
                        }
                    }
                }
            }
        }

        function cancelOrder(button) {
            var row = button.closest('tr');
            var statusCell = row.cells[5];
            var actionCell = row.cells[6];

            statusCell.innerHTML = '<span class="badge bg-danger">Cancelled</span>';
            button.disabled = true;
        }
    </script>
</body>
</html>
