<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <!-- bootstrap cdn -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
    <!-- font awesome cdn -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
        integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/signUp.css">
    <style>
        .containerMod {
            height: 100vh;
            width: 100%;
            background-color: #ff910043;
        }

        body {
            font-family: sans-serif;
        }

        .rowMod-1 {
            width: 380px;
            height: 475px;
            border: 6px solid #ff9000;
            background-color: #ff91000e;
            box-shadow: 14px 15.5px 6px 0 #ff9000;
            padding-top: 12px;
        }

        .rowMod-1>form>.colMod-2 {
            width: 100%;
            height: 490px;
            padding: 0 20px;
        }

        input[type='email'],
        input[type='password'],
        input[type='number'],
        input[type='text'] {
            color: #ff9000 !important;
            border: 1px solid #ff9000 !important;
            background-color: #fff !important;
        }

        input[type='checkbox'] {
            accent-color: #ff9000 !important;
        }

        a {
            text-decoration: none;
            color: #ff9000;
        }

        p {
            color: #ff9000;
        }

        .dropDown-btn {
            width: 305px;
            padding: 13px 0;
            color: #ff9000 !important;
            border: 1px solid #ff9000 !important;
            background-color: #ffff !important;
        }

        .dropdown-menu {
            width: 300px;
            padding: 16px 0;
            color: #ff9000 !important;
            border: 1px solid #ff9000 !important;
            background-color: #ffff !important;
        }

        .dropdown-menu-error {
            width: 300px;
            padding: 15px 0;
            color: rgba(255, 0, 0, 0.5) !important;
            border: 2px solid rgba(255, 0, 0, 0.352) !important;
            background-color: rgba(255, 0, 0, 0.103) !important;
        }

        .dropdown-item {
            color: #ff9000 !important;
        }

        .dropdown-item>p {
            margin: 2px 15px;
        }

        .rowMod-1>form>.colMod-3 {
            width: 100%;
            height: 100px;
            padding: 5px 25px;
        }

        .rowMod-1>form>.colMod-3>button {
            outline: none;
            border: none;
            padding: 12px 0;
            width: 275px;
            margin-left: 17px;
            background-color: #ff9000;
            color: #fff;
        }

        .termsConditionlinkText {
            font-size: 0.85rem;
        }

        #successAlert,
        #errorAlert {
            opacity: 1;
            transition: opacity 0.5s ease-out;
        }
    </style>


  <!-- validator js  -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/validator/13.7.0/validator.min.js"></script>
    <!-- script  -->
    <script defer>
        document.addEventListener('DOMContentLoaded', function () {
            // addAddressModal
            let addressModal = new bootstrap.Modal(document.getElementById('addressModal'));
            let addAddressModal = new bootstrap.Modal(document.getElementById('addAddressModal'));

            document.querySelector('[data-bs-target="#addAddressModal"]').addEventListener('click', function () {
                addressModal.hide();
                addAddressModal.show();
            });

            // reset password
            let resetPasswordModal = new bootstrap.Modal(document.getElementById('resetPassword'));

            document.querySelector('[data-bs-target="#resetPassword"]').addEventListener('click', function () {
                resetPasswordModal.show();
            });

            // Hide an element (flash message) after a delay
            function hideElement(elementId) {
                const element = document.getElementById(elementId);
                if (element) {
                    setTimeout(() => {
                        element.style.opacity = '0';
                        setTimeout(() => {
                            element.style.display = 'none';
                        }, 500);
                    }, 2000);
                }
            }

            // Hide alerts ()........
            hideElement('successAlert');
            hideElement('errorAlert');




    // Validation for edit address forms
    document.querySelectorAll('form[action="/editAddress"]').forEach(form => {
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            let isValid = true;
            
            const phone = this.querySelector('input[name="phone"]').value;
            const zip = this.querySelector('input[name="zip"]').value;
            const age = this.querySelector('input[name="age"]').value;
            const username = this.querySelector('input[name="username"]').value;
            const gender = this.querySelector('select[name="gender"]').value;
            const country = this.querySelector('input[name="country"]').value;
            const landmark = this.querySelector('input[name="landmark"]').value;
            const locality = this.querySelector('input[name="locality"]').value;
            const state = this.querySelector('input[name="state"]').value;
            
            if (!validator.isMobilePhone(phone, 'any')) {
                alert('Please enter a valid phone number.');
                isValid = false;
            }

            if (!validator.isPostalCode(zip, 'any')) {
                alert('Please enter a valid zip code.');
                isValid = false;
            }

            if (!validator.isInt(age, { min: 18, max: 100 })) {
                alert('Please enter a valid age between 18 and 100.');
                isValid = false;
            }

            if (!validator.isAlpha(username, 'en-US', {ignore: ' '})) {
                alert('Please enter a valid username.');
                isValid = false;
            }

            if (!validator.isAlpha(gender, 'en-US', {ignore: ' '})) {
                alert('Please enter a valid gender.');
                isValid = false;
            }
            if (!validator.isAlpha(country, 'en-US', {ignore: ' '})) {
                alert('Please enter a valid country.');
                isValid = false;
            }
            if (!validator.isAlpha(landmark, 'en-US', {ignore: ' '})) {
                alert('Please enter a valid landmark.');
                isValid = false;
            }
            if (!validator.isAlpha(locality, 'en-US', {ignore: ' '})) {
                alert('Please enter a valid locality.');
                isValid = false;
            }
            if (!validator.isAlpha(state, 'en-US', {ignore: ' '})) {
                alert('Please enter a valid state.');
                isValid = false;
            }
            
            if (isValid) {
                console.log('Form is valid, submitting...');
                this.submit();
            } else {
                console.log('Form is invalid, not submitting.');
            }
        });
    });

    // Validation for add address form
    const addAddressForm = document.querySelector('form[action="/addAddress"]');
    console.log("called");
    
    if (addAddressForm) {
        
        addAddressForm.addEventListener('submit', function(e) {
            e.preventDefault();
            let isValid = true;
            
            const phone = this.querySelector('input[name="phone"]').value;
            const zip = this.querySelector('input[name="zip"]').value;
            const country = this.querySelector('input[name="country"]').value;
            const landmark = this.querySelector('input[name="landmark"]').value;
            const locality = this.querySelector('input[name="locality"]').value;
            const state = this.querySelector('input[name="state"]').value;
            
            if (!validator.isMobilePhone(phone, 'any')) {
                alert('Please enter a valid phone number.');
                isValid = false;
            }

            if (!validator.isPostalCode(zip, 'any')) {
                alert('Please enter a valid zip code.');
                isValid = false;
            }

            if (!validator.isAlpha(locality, 'en-US', {ignore: ' '})) {
                alert('Please enter a valid locality.');
                isValid = false;
            }

            if (!validator.isAlpha(state, 'en-US', {ignore: ' '})) {
                alert('Please enter a valid state.');
                isValid = false;
            }

            if (!validator.isAlpha(country, 'en-US', {ignore: ' '})) {
                alert('Please enter a valid country.');
                isValid = false;
            }
            if (!validator.isAlpha(landmark, 'en-US', {ignore: ' '})) {
                alert('Please enter a valid landmark.');
                isValid = false;
            }
         
           
            
            if (isValid) {
                console.log('Form is valid, submitting...');
                this.submit();
            } else {
                console.log('Form is invalid, not submitting.');
            }
        });



    }

    // Validation for reset password form
    const resetPasswordForm = document.querySelector('form[action="/resetPassword"]');
    if (resetPasswordForm) {
        resetPasswordForm.addEventListener('submit', function(e) {
            e.preventDefault();
            let isValid = true;
            
            const newPassword = this.querySelector('input[name="newPassword"]').value;
            const confirmPassword = this.querySelector('input[name="confirmPassword"]').value;
            
            if (!validator.isLength(newPassword, {min: 8})) {
                alert('Password must be at least 8 characters long.');
                isValid = false;
            }
            
            if (!validator.equals(newPassword, confirmPassword)) {
                alert('New password and confirm password do not match.');
                isValid = false;
            }
            
            if (isValid) {
                console.log('Form is valid, submitting...');
                this.submit();
            } else {
                console.log('Form is invalid, not submitting.');
            }
        });
    }




























        });



            
           





    </script>
  
</head>

<body>

    <div class="main">
        <!-- flash message  -->
        <% if (locals.successMessage && locals.successMessage.length > 0) { %>
            <div id="successAlert" class="alert alert-success" role="alert"
                style="position: absolute;top: 0;right: 0;z-index: 50;left: 0;">
                <%= locals.successMessage %>
            </div>
        <% } %>

        <% if (locals.errorMessage && locals.errorMessage.length > 0) { %>
            <div id="errorAlert" class="alert alert-danger" role="alert"
                style="position: absolute;top: 0;right: 0;z-index: 50;left: 0;">
                <%= locals.errorMessage %>
            </div>
        <% } %>


        <div class="container-fluid containerMod d-flex align-items-center justify-content-center">
            <div style="position: absolute;top: 0;left: 100px;top: 50px;">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Profile</li>
                    </ol>
                </nav>
            </div>
            <div class="row rowMod-1 flex-column rounded-4">
                <div class="col-6 colMod-2 w-100">
                    <div class="form-floating mb-3 form-floatingOne">
                        <input type="text" id="name" name="name" value="<%=userData?.username%>"
                            class="form-control shadow-none" placeholder="name" disabled
                            style="background-color: #fff;">
                        <label for="name">
                            <p>Name</p>
                        </label>
                    </div>
                    <div class="form-floating mb-3 form-floatingOne">
                        <input type="email" id="email" name="email" value="<%=userData?.email %>"
                            class="form-control shadow-none" placeholder="email" disabled
                            style="background-color: #fff;">
                        <label for="email">
                            <p>Email address</p>
                        </label>
                    </div>


                    <div class="form-floating mb-3 form-floatingFour">
                        <input type="text" name="state" id="state" value="<%=userData?.age %>"
                            class="form-control shadow-none" disabled placeholder="age">
                        <label for="state">
                            <p>Age</p>
                        </label>
                    </div>
                    <div class="form-floating mb-3 form-floatingFour">
                        <input type="text" name="gender" id="gender" class="form-control shadow-none"
                            value="<%=userData?.gender %>" placeholder="gender" readonly>
                        <label for="country">
                            <p>Gender</p>
                        </label>
                    </div>
                    <div class="form-floating mb-3 form-floatingFour">
                        <button class="w-100 py-3 rounded" data-bs-toggle="modal" data-bs-target="#addressModal"
                            style="border: 1px solid #ff9000;outline: none;color: #ff9000;background-color: #fff;">
                            Address
                        </button>
                    </div>
                </div>
                <div class="col-6 colMod-3 w-100 d-flex justify-content-evenly mt-2">
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#resetPassword">Reset Password</button>
                    <a href="/logout" class="btn btn-danger">Logout</a>
                </div>
            </div>
        </div>
    </div>

    <!-- multiple address edit address modal -->
    <div class="modal fade" id="addressModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="addressModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5 text-capitalize text-secondary" id="addressModalLabel">Addresses</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" style="max-height: 400px; overflow-y: auto;">
                    <!-- looping address -->
                    <% userData.addresses.forEach((address, index) => { %>
                        <form action="/editAddress" method="post">
                            <div class="address-item mb-4 border border shadow-sm p-4">
                                <div class="d-flex justify-content-between">
                                    <h5 class="text-capitalize text-secondary"> <b>Address</b> <%= index + 1 %></h5>
                                    <button type="submit" class="btn btn-sm btn-primary edit-address px-5">Edit</button>

                                </div>
                                <div class="py-3 row">
                                    <input type="hidden" class="py-3 mb-3 rounded shadow" value="<%=index%>" name="index">
                                    <input type="text" class="py-3 mb-3 rounded shadow" value="<%= userData?.username %>" name="username" placeholder="username">
                                    <input type="text" class="py-3 mb-3 rounded shadow" value="<%= userData?.age %>" name="age" placeholder="age">
                                    <!-- <input type="text" class="py-3 mb-3 rounded shadow" value="<%# = userData?.gender %>" name="gender"> -->
                                    <select class="form-select py-3 mb-3 rounded shadow" aria-label="Default select example" name="gender" id="editGender" style="border:1px solid #ff9000 !important;color: #ff9000;">
                                        <option selected><%= userData?.gender %></option>
                                        <option value="<%=( userData?.gender === "male") ? "female" : "male" %>">
                                            <%=( userData?.gender === "male") ? "female" : "male" %>
                                        </option>                                        
                                      </select>
                                    <input type="text" class="py-3 mb-3 rounded shadow" value="<%= address?.state %>" name="state" placeholder="state">
                                    <input type="text" class="py-3 mb-3 rounded shadow" value="<%= address?.zip %>" name="zip" placeholder="zip">
                                    <input type="text" class="py-3 mb-3 rounded shadow" value="<%= address?.phone %>" name="phone" placeholder="phone">
                                    <input type="text" class="py-3 mb-3 rounded shadow" value="<%= address?.locality %>" name="locality" placeholder="locality">
                                    <input type="text" class="py-3 mb-3 rounded shadow" value="<%= address?.country %>" name="country" placeholder="country">
                                    <input type="text" class="py-3 mb-3 rounded shadow" value="<%= address?.landmark %>" name="landmark" placeholder="landmark">
                                </div>
                            </div>
                        </form>
                    <% }) %>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAddressModal">Add Address</button>
                </div>
            </div>
        </div>
    </div>

    <!-- add address model -->
    <div class="modal fade" id="addAddressModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <form action="/addAddress" method="post">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="addAddressModalLabel">Add Address</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" style="max-height: 400px; overflow-y: auto;">
                        <div class="address-item mb-3 border p-4 shadow-sm">
                            <div>
                                <div class="form-floating mb-3">
                                    <input type="hidden" name="username" value="<%= userData?.username %>">
                                    <input type="hidden" name="email" value="<%= userData?.email %>">
                                    <input type="number" name="phone" id="editPhone" class="form-control shadow-none"
                                        placeholder="number">
                                    <label for="editPhone">
                                        <p>Phone</p>
                                    </label>
                                </div>
                                <div class="form-floating mb-3">
                                    <input type="number" id="editZip" class="form-control shadow-none" name="zip"
                                        placeholder="zip">
                                    <label for="editZip">
                                        <p>zip</p>
                                    </label>
                                </div>
                                <div class="form-floating mb-3">
                                    <input type="text" name="locality" id="editLocality" class="form-control shadow-none"
                                        placeholder="address">
                                    <label for="editLocality">
                                        <p>locality</p>
                                    </label>
                                </div>
                                <div class="form-floating mb-3">
                                    <input type="text" name="state" id="editState" class="form-control shadow-none"
                                        placeholder="address">
                                    <label for="editState">
                                        <p>state</p>
                                    </label>
                                </div>
                                <div class="form-floating mb-3">
                                    <input type="text" name="country" id="editCountry" class="form-control shadow-none"
                                        placeholder="country">
                                    <label for="editCountry">
                                        <p>country</p>
                                    </label>
                                </div>
                                <div class="form-floating mb-3">
                                    <input type="text" name="landmark" id="editLandmark" class="form-control shadow-none"
                                        placeholder="landmark">
                                    <label for="editLandmark">
                                        <p>landmark</p>
                                    </label>
                                </div>

                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Add Address</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- reset password modal -->
<div class="modal fade" id="resetPassword" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="resetPasswordLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="resetPasswordLabel">Reset Password</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="/resetPassword" method="post">
                    <div class="form-floating mb-3">
                        <input type="password" name="currentPassword" class="form-control shadow-none" placeholder="Current Password" required>
                        <label for="currentPassword">
                            <p>Current Password</p>
                        </label>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="password" name="newPassword" class="form-control shadow-none" placeholder="New Password" required>
                        <label for="newPassword">
                            <p>New Password</p>
                        </label>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="password" name="confirmPassword" class="form-control shadow-none" placeholder="Confirm Password" required>
                        <label for="confirmPassword">
                            <p>Confirm Password</p>
                        </label>
                    </div>
                    <button type="submit" class="btn btn-primary">Reset Password</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>











</body>

</html>
